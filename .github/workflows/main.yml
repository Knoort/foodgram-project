name: foodgram-workflow

on:
  push:
    branches:
     - master


jobs:
  tests: 
    runs-on: ubuntu-latest
    env:
      DB_ENGINE:  'django.db.backends.postgresql'

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: Install dependencies
      run: |
        sudo apt install libpq-dev
        python -m pip install --upgrade pip
        pip install flake8
        pip install -r requirements.txt

    - name: Lint with flake8
      run: flake8 . --exclude=migrations --ignore=E401,W503,W504


  build_and_push_to_docker_hub:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      
      - name: Login to Docker
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push to Docker Hub
        uses: docker/build-push-action@v2
        with:
          no-cache: true
          context: ./
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/foodgram:v1


  deploy_and_up:
    name: Deploy proect to server and run
    needs: build_and_push_to_docker_hub
    env:
      DJANGO_DEBUG: 'False'
      DB_ENGINE:    'django.db.backends.postgresql'
      DB_NAME:      'postgres'
      DB_HOST:      'db'
      DB_PORT:      5432
      SRV_HOST:     178.154.245.213
      SRV_PORT:     22

    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master

    - name: copy start files via ssh password
      uses: appleboy/scp-action@master
      with:
        host: ${{ env.SRV_HOST }}
        username: ${{ secrets.SRV_USERNAME }}
        key: ${{ secrets.SRV_RSA_KEY }}
        passphrase: ${{ secrets.SRV_PASSWORD }}
        port: ${{ env.SRV_PORT }}
        source: >
          "docker-compose.yaml,entrypoint.sh, nginx/default.conf"
        target: "~/dev/foodgram-project/"

    - name: make env file
      uses: appleboy/ssh-action@master
      with:
        host: ${{ env.SRV_HOST }}
        username: ${{ secrets.SRV_USERNAME }}
        key: ${{ secrets.SRV_RSA_KEY }}
        passphrase: ${{ secrets.SRV_PASSWORD }}
        port: ${{ env.SRV_PORT }}
        script: |
          cd ~/dev/foodgram-project/
          rm .env
          touch .env
          echo 'DJANGO_KEY="${{ secrets.DJANGO_KEY }}"' >> .env
          echo 'DJANGO_DEBUG="${{ env.DJANGO_DEBUG }}"' >> .env
          echo 'DB_ENGINE=${{ env.DB_ENGINE }}' >> .env
          echo 'DB_NAME=${{ env.DB_NAME }}' >> .env
          echo 'DB_HOST=${{ env.DB_HOST }}' >> .env
          echo 'DB_PORT=${{ env.DB_PORT }}' >> .env
          echo 'POSTGRES_USER=${{ secrets.DB_USER }}' >> .env
          echo 'POSTGRES_PASSWORD=${{ secrets.DB_PASSWORD }}' >> .env
          echo 'GOOGLE_PASSWD=${{ secrets.GOOGLE_PASSWD }}' >> .env

    - name: executing remote ssh commands to deploy
      uses: appleboy/ssh-action@master
      with:
        host: ${{ env.SRV_HOST }}
        username: ${{ secrets.SRV_USERNAME }}
        key: ${{ secrets.SRV_RSA_KEY }}
        passphrase: ${{ secrets.SRV_PASSWORD }}
        port: ${{ env.SRV_PORT }}
        script: |
          cd ~/dev/foodgram-project/
          sudo docker pull ${{ secrets.DOCKER_USERNAME }}/foodgram:v1
          sudo docker-compose down
          sudo docker-compose up -d
          sudo docker image prune -f


  send_message:
    runs-on: ubuntu-latest
    needs: deploy_and_up
    steps:
    - name: send message
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEG_TO }}
        token: ${{ secrets.TELEG_TOKEN }}
        message: ${{ github.workflow }} успешно выполнен!
